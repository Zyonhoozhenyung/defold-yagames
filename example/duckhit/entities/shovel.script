function init(self)

end

function final(self)

end

function update(self, dt)
	-- NOT USED
	if self.show_trail then
		-- go.set_position(go.get_position() - vmath.vector3(0, 70, 0), go.get_id("/trail"))
	end
end

local function throw_complete(self, url, property)
	go.delete()
end

local function hide_complete(self, url, property)
	go.delete()
end

function on_message(self, message_id, message, sender)
	if message_id == hash("throw") then
		self.show_trail = true

		go.set(".", "position", message.from)
		go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, message.to, go.EASING_LINEAR, 0.300, 0, throw_complete)
		
	elseif message_id == hash("hide") then

		local p = go.get_position()
		local d = (math.random(0, 1) - 0.5) * 2
		p = p + vmath.vector3((400 + math.random() * 400) * d, -800, 0)
		p.z = -0.1
		go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, p, go.EASING_LINEAR, 1, 0, hide_complete)
		go.animate(".", "euler.z", go.PLAYBACK_LOOP_FORWARD, 360 * 3, go.EASING_LINEAR, 0.2 * 3)

		go.animate("#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1, 1, 1, 0), go.EASING_INCUBIC, 0.4)

	elseif message_id == hash("trigger_response") then
		if message.other_group == hash("target") and not self.hit_target then
			if message.enter then
				self.hit_target = true

				go.cancel_animations(".", "position")

				msg.post(message.other_id, "hit")
				msg.post("#", "hide")
			end
		end
		-- end
	end
end

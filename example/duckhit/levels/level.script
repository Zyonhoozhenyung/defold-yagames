go.property("radius", 175)
go.property("count", 14)
go.property("movement_mode", 0)

go.property("_target_show_anim", 0)

local function level_show_complete(self, url, property)
	msg.post("/level_world/control", "level_ready")
end

function init(self)
	self.targets = {}
	self.hit_count = 0

	for i = 1, self.count do
		local angle = 360 / self.count * i / 180 * math.pi
		local target_radius = self.radius
		local target = nil
		if i % 40 == 0 then
			target = factory.create("/level_world/factories#ducks", vmath.vector3())
		else
			target = factory.create("/level_world/factories#targets", vmath.vector3())
		end
		go.set_parent(target, go.get_id())

		msg.post(target, "move", {
			angle = angle,
			radius = target_radius,
			mode = self.movement_mode
		})

		self.targets[#self.targets + 1] = target
	end

	msg.post("/level_world/control", "level_show")

	go.animate("#", "_target_show_anim", go.PLAYBACK_ONCE_FORWARD, 1, go.EASING_OUTCUBIC, 0.35, 0.1, level_show_complete)
end

function final(self)
end

function update(self, dt)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("target_hit") then
		if message.hit then
			self.hit_count = self.hit_count + 1
		else
			self.hit_count = self.hit_count - 1
		end

		if self.hit_count == self.count then
			for _, v in pairs(self.targets) do
				msg.post(v, "stop_and_explode")
			end

			msg.post("/level_world/control", "level_all_hit")
		end
	end
end
